<?xml version="1.0" encoding="UTF-8"?><schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:iwxxm="http://icao.int/iwxxm/1.1" xmlns:om="http://www.opengis.net/om/2.0" xmlns:saf="http://icao.int/saf/1.1" xmlns:sams="http://www.opengis.net/samplingSpatial/2.0" xmlns:metce="http://def.wmo.int/metce/2013" targetNamespace="http://icao.int/iwxxm/1.1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.1">
   <annotation>
      <documentation>References to WMO and ICAO Technical Regulations within this XML schema shall have
         no formal status and are for information purposes only. Where there are differences
         between the Technical Regulations and the schema, the Technical Regulations shall
         take precedence. Technical Regulations may impose requirements that are not described
         in this schema.
      </documentation>
      <documentation>METAR and SPECI reporting constructs as defined in ICAO Annex 3 / WMO No. 49-2.  METAR
         and SPECI reports include identical information but are issued for different purposes.
         METAR reports are routine observations made at an aerodrome throughout the day.  METAR
         observations are made (and distributed) at intervals of one hour or, if so determined
         by regional air navigation agreement, at intervals of one half-hour.   SPECI reports
         are special (i.e., non-routine) observation made at an aerodrome as needed. SPECI
         observations are made (and distributed) in accordance with criteria established by
         the meteorological authority, in consultation with the appropriate ATS authority,
         operators and others concerned.
      </documentation>
      <appinfo>
         <sch:title xmlns:sch="http://purl.oclc.org/dsdl/schematron">Schematron validation</sch:title>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="iwxxm" uri="http://icao.int/iwxxm/1.1"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="saf" uri="http://icao.int/saf/1.1"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="sam" uri="http://www.opengis.net/sampling/2.0"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="sams" uri="http://www.opengis.net/samplingSpatial/2.0"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="xlink" uri="http://www.w3.org/1999/xlink"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="om" uri="http://www.opengis.net/om/2.0"/>
         <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="gml" uri="http://www.opengis.net/gml/3.2"/>
      </appinfo>
   </annotation>
   <import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/>
   <import namespace="http://icao.int/saf/1.1" schemaLocation="http://schemas.wmo.int/saf/1.1/saf.xsd"/>
   <import namespace="http://www.opengis.net/om/2.0" schemaLocation="http://schemas.opengis.net/om/2.0/observation.xsd"/>
   <import namespace="http://def.wmo.int/metce/2013" schemaLocation="http://schemas.wmo.int/metce/1.1/metce.xsd"/>
   <import namespace="http://www.opengis.net/samplingSpatial/2.0" schemaLocation="http://schemas.opengis.net/samplingSpatial/2.0/spatialSamplingFeature.xsd"/>
   <include schemaLocation="iwxxm.xsd"/>
   <element name="MeteorologicalAerodromeObservationReport" substitutionGroup="gml:AbstractFeature" type="iwxxm:MeteorologicalAerodromeObservationReportType">
      <annotation>
         <documentation>A report of observed and trend forecast weather phenomenon from the surface near an
            aerodrome.  This is a shared superclass for METAR and SPECI reports, which have identical
            reported information.
         </documentation>
      </annotation>
   </element>
   <complexType name="MeteorologicalAerodromeObservationReportType">
      <complexContent>
         <extension base="gml:AbstractFeatureType">
            <sequence>
               <element name="observation" type="om:OM_ObservationPropertyType">
                  <annotation>
                     <documentation>The observation which resulted in the current meteorological conditions at an aerodrome</documentation>
                  </annotation>
               </element>
               <element maxOccurs="3" minOccurs="0" name="trendForecast" type="om:OM_ObservationPropertyType">
                  <annotation>
                     <documentation>The process that results in a trend forecast.  When no change is expected to occur
                        during a forecast period ("NOSIG") this is indicated by a single missing trend forecast
                        with a nil reason of noSignificantChange
                     </documentation>
                  </annotation>
               </element>
            </sequence>
            <attribute name="status" type="iwxxm:MeteorologicalAerodromeReportStatusType" use="required"/>
            <attribute name="automatedStation" type="boolean"/>
         </extension>
      </complexContent>
   </complexType>
   <complexType name="MeteorologicalAerodromeObservationReportPropertyType">
      <sequence minOccurs="0">
         <element ref="iwxxm:MeteorologicalAerodromeObservationReport"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="SPECI" substitutionGroup="iwxxm:MeteorologicalAerodromeObservationReport" type="iwxxm:SPECIType">
      <annotation>
         <documentation>A special (i.e., non-routine) observation made at an aerodrome as needed. SPECI observations
            are made (and distributed) in accordance with criteria established by the meteorological
            authority, in consultation with the appropriate ATS authority, operators and others
            concerned.   The information contained in METAR and SPECI is identical. SPECI is issued
            when conditions merit a non-routine report on conditions at an aerodrome.  SPECI reports
            are used for dissemination beyond the aerodrome of origin (mainly intended for flight
            planning, VOLMET broadcasts and D-VOLMET) unless METAR are issued at half-hourly intervals.
            SPECI is issued following the resumption of the issuance of METAR, as necessary, at
            aerodromes that are not operational throughout 24 hours in accordance with ICAO Annex
            3 Section 4.3.1.  See ICAO Annex 3 / WMO No. 49-2 Table A3-2
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="SPECI1">
               <sch:rule context="//iwxxm:SPECI">
                  <sch:assert test="(empty(distinct-values(for $trend-forecast in //iwxxm:trendForecast return((deep-equal(//iwxxm:observation/om:OM_Observation/om:featureOfInterest//sam:sampledFeature,$trend-forecast/om:OM_Observation/om:featureOfInterest//sam:sampledFeature))or(concat('#', //iwxxm:observation/om:OM_Observation/om:featureOfInterest/sams:SF_SpatialSamplingFeature/@gml:id)=$trend-forecast/om:OM_Observation/om:featureOfInterest/@xlink:href)))[.=false()]))">SPECI: sampledFeature should be equal in observation and trendForecast</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="SPECI2">
               <sch:rule context="//iwxxm:SPECI">
                  <sch:assert test="(if(@status eq 'MISSING') then( exists(iwxxm:observation//om:result/@nilReason) and ((empty(@automatedStation) or (@automatedStation eq 'false')) and empty(iwxxm:trendForecast)) ) else(true()))">SPECI: Missing reports only include identifying information (time, aerodrome) and
                     no other information
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="SPECI3">
               <sch:rule context="//iwxxm:SPECI">
                  <sch:assert test="(if( empty(iwxxm:observation//iwxxm:cloud/iwxxm:AerodromeObservedClouds) and ends-with(iwxxm:observation//iwxxm:cloud/@nilReason, 'notDetectedByAutoSystem') ) then(@automatedStation eq 'true') else(true()))">SPECI: When no clouds are detected by the auto system, this report must be an auto
                     report
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="SPECI4">
               <sch:rule context="//iwxxm:SPECI">
                  <sch:assert test="(((exists(//om:OM_Observation/om:featureOfInterest//sam:sampledFeature/saf:Aerodrome)) or (contains(string(//om:OM_Observation/om:featureOfInterest//sam:sampledFeature/@xlink:href), 'aerodrome')) )  and  ( if(exists(//om:OM_Observation/om:featureOfInterest/@xlink:href)) then (concat( '#', //om:OM_Observation//sams:SF_SpatialSamplingFeature/@gml:id ) = //om:OM_Observation/om:featureOfInterest/@xlink:href) else(true())))">MeteorologicalAerodromeObservation: The sampled feature for a METAR/SPECI is an aerodrome</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="SPECI5">
               <sch:rule context="//iwxxm:SPECI/iwxxm:observation/om:OM_Observation">
                  <sch:assert test="(if(empty(om:result/@nilReason)) then(exists(om:result/iwxxm:MeteorologicalAerodromeObservationRecord)) else(true()))">MeteorologicalAerodromeObservation: Result should be of appropriate type</sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="SPECIType">
      <complexContent>
         <extension base="iwxxm:MeteorologicalAerodromeObservationReportType"/>
      </complexContent>
   </complexType>
   <complexType name="SPECIPropertyType">
      <sequence minOccurs="0">
         <element ref="iwxxm:SPECI"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="METAR" substitutionGroup="iwxxm:MeteorologicalAerodromeObservationReport" type="iwxxm:METARType">
      <annotation>
         <documentation>A routine observation made at an aerodrome throughout the day.  METAR observations
            are made (and distributed) at intervals of one hour or, if so determined by regional
            air navigation agreement, at intervals of one half-hour.   The information contained
            in METAR and SPECI is identical. SPECI is issued when conditions merit a non-routine
            report on conditions at an aerodrome.  METARs are a routine report produced for dissemination
            beyond the aerodrome of origin, and are mainly intended for flight planning, VOLMET
            broadcasts and D-VOLMET.  See ICAO Annex 3 / WMO No. 49-2 Table A3-2
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="METAR1">
               <sch:rule context="//iwxxm:METAR">
                  <sch:assert test="(empty(distinct-values(for $trend-forecast in //iwxxm:trendForecast return((deep-equal(//iwxxm:observation/om:OM_Observation/om:featureOfInterest//sam:sampledFeature,$trend-forecast/om:OM_Observation/om:featureOfInterest//sam:sampledFeature))or(concat('#', //iwxxm:observation/om:OM_Observation/om:featureOfInterest/sams:SF_SpatialSamplingFeature/@gml:id)=$trend-forecast/om:OM_Observation/om:featureOfInterest/@xlink:href)))[.=false()]))">METAR: sampledFeature should be equal in observation and trendForecast</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="METAR2">
               <sch:rule context="//iwxxm:METAR">
                  <sch:assert test="(if(@status eq 'MISSING') then( exists(iwxxm:observation//om:result/@nilReason) and ((empty(@automatedStation) or (@automatedStation eq 'false')) and empty(iwxxm:trendForecast)) ) else(true()))">METAR: Missing reports only include identifying information (time, aerodrome) and
                     no other information
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="METAR3">
               <sch:rule context="//iwxxm:METAR">
                  <sch:assert test="(if( empty(iwxxm:observation//iwxxm:cloud/iwxxm:AerodromeObservedClouds) and ends-with(iwxxm:observation//iwxxm:cloud/@nilReason, 'notDetectedByAutoSystem') ) then(@automatedStation eq 'true') else(true()))">METAR: When no clouds are detected by the auto system, this report must be an auto
                     report
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="METAR4">
               <sch:rule context="//iwxxm:METAR">
                  <sch:assert test="(((exists(//om:OM_Observation/om:featureOfInterest//sam:sampledFeature/saf:Aerodrome)) or (contains(string(//om:OM_Observation/om:featureOfInterest//sam:sampledFeature/@xlink:href), 'aerodrome')) )  and  ( if(exists(//om:OM_Observation/om:featureOfInterest/@xlink:href)) then (concat( '#', //om:OM_Observation//sams:SF_SpatialSamplingFeature/@gml:id ) = //om:OM_Observation/om:featureOfInterest/@xlink:href) else(true())))">MeteorologicalAerodromeObservation: The sampled feature for a METAR/SPECI is an aerodrome</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="METAR5">
               <sch:rule context="//iwxxm:METAR/iwxxm:observation/om:OM_Observation">
                  <sch:assert test="(if(empty(om:result/@nilReason)) then(exists(om:result/iwxxm:MeteorologicalAerodromeObservationRecord)) else(true()))">MeteorologicalAerodromeObservation: Result should be of appropriate type</sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="METARType">
      <complexContent>
         <extension base="iwxxm:MeteorologicalAerodromeObservationReportType"/>
      </complexContent>
   </complexType>
   <complexType name="METARPropertyType">
      <sequence minOccurs="0">
         <element ref="iwxxm:METAR"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <!--MeteorologicalAerodromeObservation and relevant components removed-->
   <!--MeteorologicalAerodromeTrendForecast and relevant components removed-->
   <element name="MeteorologicalAerodromeTrendForecastRecord" substitutionGroup="gml:AbstractGML" type="iwxxm:MeteorologicalAerodromeTrendForecastRecordType">
      <annotation>
         <documentation>A specialized Record type containing meteorological conditions for trend forecasting
            at an aerodrome.  This class is also related but not identical to MeteorologicalAerodromeForecastRecord
            which is reported on a TAF - conditions reported in trend forecasts in METAR/SPECI
            differ from forecast groups in a TAF.  When no clouds of operational significance
            or no weather of operational significance is predicted, the NothingOfOperationalSignificance
            nilReason should be used for the cloud or presentWeather association.  When no clouds
            were detected by the automatic observing system, the NotDetectedByAutoSystem nilReason
            should be used for the cloud association.
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeTrendForecastRecord1">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeTrendForecastRecord">
                  <sch:assert test="(if( @cloudAndVisibilityOK eq 'true' ) then (empty(iwxxm:cloud)) else (true()))">MeteorologicalAerodromeTrendForecastRecord: clouds should be absent when cloudAndVisibilityOK
                     is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeTrendForecastRecord2">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeTrendForecastRecord">
                  <sch:assert test="(if( @cloudAndVisibilityOK eq 'true' ) then (empty(iwxxm:forecastWeather)) else (true()))">MeteorologicalAerodromeTrendForecastRecord: forecastWeather should be absent when
                     cloudAndVisibilityOK is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="MeteorologicalAerodromeTrendForecastRecordType">
      <complexContent>
         <extension base="gml:AbstractGMLType">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="prevailingVisibility" type="gml:LengthType">
                  <annotation>
                     <appinfo>
			     <quantity>http://codes.wmo.int/common/quantity-kind/aeronauticalPrevailingHorizontalVisibility</quantity>
                     </appinfo>
                     <documentation>The prevailing horizontal visibility reported in a trend forecast
			     quantity: http://codes.wmo.int/common/quantity-kind/aeronauticalPrevailingHorizontalVisibility
                     </documentation>
                  </annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="prevailingVisibilityOperator" type="iwxxm:RelationalOperatorType">
                  <annotation>
                     <documentation>The reported relational operator for the prevailing horizontal visibility.  When reported,
                        this operator is reported in conjunction with prevailing visibility.  To report a
                        prevailing visibility of at least 10000 meters, prevailing visibility is reported
                        as 10000 meters and the operator is reported as "above".    When no operator is reported,
                        prevailing visibility represents an exact value with identical semantics to other
                        measured quantities
                     </documentation>
                  </annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="surfaceWind" type="iwxxm:AerodromeSurfaceWindTrendForecastPropertyType"/>
               <element maxOccurs="3" minOccurs="0" name="forecastWeather" type="iwxxm:AerodromeForecastWeatherType"/>
               <element maxOccurs="1" minOccurs="0" name="cloud" type="iwxxm:AerodromeCloudForecastPropertyType"/>
            </sequence>
            <attribute name="changeIndicator" type="iwxxm:ForecastChangeIndicatorType" use="required"/>
            <attribute name="cloudAndVisibilityOK" type="boolean" use="required"/>
         </extension>
      </complexContent>
   </complexType>
   <complexType name="MeteorologicalAerodromeTrendForecastRecordPropertyType">
      <sequence minOccurs="0">
         <element ref="iwxxm:MeteorologicalAerodromeTrendForecastRecord"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="MeteorologicalAerodromeObservationRecord" substitutionGroup="gml:AbstractGML" type="iwxxm:MeteorologicalAerodromeObservationRecordType">
      <annotation>
         <documentation>A specialized Record type containing meteorological conditions observed at an aerodrome.
            When no clouds of operational significance or no weather of operational significance
            is observed, the NothingOfOperationalSignificance nilReason is used for the cloud
            or presentWeather association. When no clouds were detected by the automatic observing
            system, the NotDetectedByAutoSystem nilReason is used for the cloud association.
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeObservationRecord1">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeObservationRecord">
                  <sch:assert test="(if(@cloudAndVisibilityOK='true') then empty(iwxxm:visibility) else true())">MeteorologicalAerodromeObservationRecord: should not report visibility when cloudAndVisibilityOK
                     is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeObservationRecord2">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeObservationRecord">
                  <sch:assert test="(if(@cloudAndVisibilityOK='true') then empty(iwxxm:rvr) else true())">MeteorologicalAerodromeObservationRecord: should not report rvr when cloudAndVisibilityOK
                     is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeObservationRecord3">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeObservationRecord">
                  <sch:assert test="(if(@cloudAndVisibilityOK='true') then empty(iwxxm:presentWeather) else true())">MeteorologicalAerodromeObservationRecord: should not report presentWeather when cloudAndVisibilityOK
                     is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeObservationRecord4">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeObservationRecord">
                  <sch:assert test="(if(@cloudAndVisibilityOK='true') then empty(iwxxm:cloud) else true())">MeteorologicalAerodromeObservationRecord: should not report cloud when cloudAndVisibilityOK
                     is true
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="MeteorologicalAerodromeObservationRecord5">
               <sch:rule context="//iwxxm:MeteorologicalAerodromeObservationRecord">
                  <sch:assert test="(if((exists(iwxxm:visibility)) and (iwxxm:visibility//iwxxm:prevailingVisibility/number(text()) lt 1500) and (iwxxm:visibility//iwxxm:prevailingVisibility/@uom eq 'm')) then (exists(iwxxm:rvr)) else true())">MeteorologicalAerodromeObservationRecord: Table A3-2 Note 7 states: To be included
                     if visibility or RVR &lt; 1500 m; for up to a maximum of four runways.  This is interpreted
                     to mean that if the prevailing visibility is below 1500 meters, RVR should always
                     be included
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="MeteorologicalAerodromeObservationRecordType">
      <complexContent>
         <extension base="gml:AbstractGMLType">
            <sequence>
               <element name="airTemperature" type="gml:MeasureType">
                  <annotation>
                     <appinfo>
                        <quantity>http://codes.wmo.int/common/quantity-kind/airTemperature</quantity>
                     </appinfo>
                     <documentation>The observed air temperature.  This is the temperature indicated by a thermometer
                        exposed to the air in a place sheltered from direct solar radiation.
                        
                        quantity: http://codes.wmo.int/common/quantity-kind/airTemperature
                     </documentation>
                  </annotation>
               </element>
               <element name="dewpointTemperature" type="gml:MeasureType">
                  <annotation>
                     <appinfo>
                        <quantity>http://codes.wmo.int/common/quantity-kind/dewPointTemperature</quantity>
                     </appinfo>
                     <documentation>The observed dew point temperature.  This is the temperature to which a given air
                        parcel must be cooled at constant pressure and constant water vapor content in order
                        for saturation to occur.
                        
                        quantity: http://codes.wmo.int/common/quantity-kind/dewPointTemperature
                     </documentation>
                  </annotation>
               </element>
               <element name="qnh" type="gml:MeasureType">
                  <annotation>
                     <appinfo>
                        <quantity>http://codes.wmo.int/common/quantity-kind/altimeterSettingQnh</quantity>
                     </appinfo>
                     <documentation>The observed QNH altimeter setting.  Altitude setting (also known as QNH) is defined
                        as barometric pressure adjusted to sea level. It is a pressure setting used by pilots,
                        air traffic control (ATC), and low frequency weather beacons to refer to the barometric
                        setting which, when set on an aircraft's altimeter, will cause the altimeter to read
                        altitude above mean sea level within a certain defined region.
                        
                        quantity: http://codes.wmo.int/common/quantity-kind/altimeterSettingQnh
                     </documentation>
                  </annotation>
               </element>
               <element name="surfaceWind" type="iwxxm:AerodromeSurfaceWindPropertyType"/>
               <element maxOccurs="1" minOccurs="0" name="visibility" type="iwxxm:AerodromeHorizontalVisibilityPropertyType"/>
               <element maxOccurs="4" minOccurs="0" name="rvr" type="iwxxm:AerodromeRunwayVisualRangePropertyType"/>
               <element maxOccurs="3" minOccurs="0" name="presentWeather" type="iwxxm:AerodromePresentWeatherType"/>
               <element maxOccurs="1" minOccurs="0" name="cloud" type="iwxxm:AerodromeObservedCloudsPropertyType"/>
               <element maxOccurs="3" minOccurs="0" name="recentWeather" type="iwxxm:AerodromeRecentWeatherType"/>
               <element maxOccurs="1" minOccurs="0" name="windShear" type="iwxxm:AerodromeWindShearPropertyType"/>
               <element maxOccurs="1" minOccurs="0" name="seaState" type="iwxxm:AerodromeSeaStatePropertyType"/>
               <element maxOccurs="unbounded" minOccurs="0" name="runwayState" type="iwxxm:AerodromeRunwayStatePropertyType"/>
            </sequence>
            <attribute name="cloudAndVisibilityOK" type="boolean" use="required"/>
         </extension>
      </complexContent>
   </complexType>
   <complexType name="MeteorologicalAerodromeObservationRecordPropertyType">
      <sequence minOccurs="0">
         <element ref="iwxxm:MeteorologicalAerodromeObservationRecord"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeRunwayState" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeRunwayStateType">
      <annotation>
         <documentation>An aggregation of runway conditions typically reported together at an aerodrome, including
            the runway contamination, friction, and deposits.
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeRunwayState1">
               <sch:rule context="//iwxxm:AerodromeRunwayState">
                  <sch:assert test="(if(exists(iwxxm:estimatedSurfaceFriction)) then((number(iwxxm:estimatedSurfaceFriction) gt 0) and (number(iwxxm:estimatedSurfaceFriction) le 0.9) ) else true())">AerodromeRunwayState: Estimated surface friction must  be between 0 and 0.9</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeRunwayState2">
               <sch:rule context="//iwxxm:AerodromeRunwayState">
                  <sch:assert test="(if(@estimatedSurfaceFrictionUnreliable eq 'true') then( empty(iwxxm:estimatedSurfaceFriction) ) else true())">AerodromeRunwayState: When surface friction is unreliable, no surface friction is
                     reported
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeRunwayState3">
               <sch:rule context="//iwxxm:AerodromeRunwayState">
                  <sch:assert test="(if(@allRunways eq 'true') then( empty(iwxxm:runway) ) else true())">AerodromeRunwayState: When all runways are being reported upon, no specific Runway
                     should be reported
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeRunwayState4">
               <sch:rule context="//iwxxm:AerodromeRunwayState">
                  <sch:assert test="(if( exists(iwxxm:runway) ) then( empty(@allRunways) or (@allRunways eq 'false') )  else true())">AerodromeRunwayState: When a single Runway is reported upon, the allRunways flag should
                     be missing or false
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="AerodromeRunwayStateType">
      <sequence>
         <element maxOccurs="1" minOccurs="0" name="runway" type="saf:RunwayDirectionPropertyType">
            <annotation>
               <documentation>The runway to which the conditions apply.  The runway may be missing in cases where
                  all runways are closed due to snow
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="depositType" type="iwxxm:RunwayDepositsType">
            <annotation>
               <documentation>The type of runway deposit, such as damp conditions, wet snow, or ice.  WMO 306: Table
                  0919
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="contamination" type="iwxxm:RunwayContaminationType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/runwayContaminationCoverage</quantity>
               </appinfo>
               <documentation>Proportion of runway surface that is contaminated - usually expressed as a percentage
                  of the total runway area.  WMO reporting procedures require that contamination is
                  reported in the following categories: - less than 10%; - between 11% and 25%; - between
                  26% and 50%; and - more than 50%.   See WMO No. 306: - WMO Code table 0519 - BUFR
                  Code table 0 20 087
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/runwayContaminationCoverage
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="depthOfDeposit" type="gml:LengthType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/depthOfRunwayDeposit</quantity>
               </appinfo>
               <documentation>Depth of deposit on the surface of the runway.  See WMO No. 306 WMO Code table 1079.
                  quantity: http://codes.wmo.int/common/quantity-kind/depthOfRunwayDeposit
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="estimatedSurfaceFriction" type="gml:ScaleType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/runwayFrictionCoefficient</quantity>
               </appinfo>
               <documentation>The estimated surface friction for the affected runway.  Between 0.0 and 0.9.    When
                  braking conditions are not reported and/or the runway is not operational estimatedSurfaceFriction
                  will not be reported.  WMO 306: Table 0366
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/runwayFrictionCoefficient
               </documentation>
            </annotation>
         </element>
      </sequence>
      <attribute name="allRunways" type="boolean"/>
      <attribute name="cleared" type="boolean"/>
      <attribute name="estimatedSurfaceFrictionUnreliable" type="boolean"/>
      <attribute name="snowClosure" type="boolean"/>
   </complexType>
   <complexType name="AerodromeRunwayStatePropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeRunwayState"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeRunwayVisualRange" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeRunwayVisualRangeType">
      <annotation>
         <documentation>An aggregation of runway visual range conditions for a single runway, typically reported
            together at an aerodrome
         </documentation>
      </annotation>
   </element>
   <complexType name="AerodromeRunwayVisualRangeType">
      <sequence>
         <element name="runway" type="saf:RunwayDirectionPropertyType">
            <annotation>
               <documentation>The runway to which reported runway visual range information applies</documentation>
            </annotation>
         </element>
         <element name="meanRVR" type="gml:LengthType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/runwayVisualRangeRvr</quantity>
               </appinfo>
               <documentation>The mean recent runway visual range value observed. This mean represents the 10 minute
                  average for observed RVR except when the 10-minute period immediately preceding the
                  observation includes a marked discontinuity in runway visual range values, only those
                  values occurring after the discontinuity is used for obtaining mean values.  To report
                  a mean RVR of at least 2000 meters, mean RVR is reported as 2000 meters and the operator
                  is reported as "above"  Annex 3: Table A3-2 "RVR/RVR" Section 4.3.6.6
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/runwayVisualRangeRvr
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="meanRVROperator" type="iwxxm:RelationalOperatorType">
            <annotation>
               <documentation>The reported relational operator for the mean RVR. When reported, this operator is
                  reported in conjunction with mean RVR.    To report a mean RVR of at least 2000 meters,
                  mean RVR is reported as 2000 meters and the operator is reported as "above".  When
                  no operator is reported, mean RVR represents an exact value with identical semantics
                  to other measured quantities
               </documentation>
            </annotation>
         </element>
      </sequence>
      <attribute name="pastTendency" type="iwxxm:VisualRangeTendencyType"/>
   </complexType>
   <complexType name="AerodromeRunwayVisualRangePropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeRunwayVisualRange"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeSeaState" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeSeaStateType">
      <annotation>
         <documentation>An aggregation of sea state conditions typically reported together at an aerodrome.
            This includes information on sea-surface temperature and either the state of the sea
            or significant wave height from aeronautical meteorological stations established on
            offshore structures in support of helicopter operations
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeSeaState1">
               <sch:rule context="//iwxxm:AerodromeSeaState">
                  <sch:assert test="(if( exists(iwxxm:seaState) ) then ( empty(iwxxm:significantWaveHeight) ) else (true()))">AerodromeSeaState: If the sea state is set, significantWaveHeight is not reported
                     (one or the other)
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeSeaState2">
               <sch:rule context="//iwxxm:AerodromeSeaState">
                  <sch:assert test="(if( exists(iwxxm:significantWaveHeight) ) then ( empty(iwxxm:seaState) ) else (true()))">AerodromeSeaState: If the significantWaveHeight is set, seaState is not reported (one
                     or the other)
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeSeaState3">
               <sch:rule context="//iwxxm:AerodromeSeaState">
                  <sch:assert test="(if( empty(iwxxm:seaState) ) then ( exists(iwxxm:significantWaveHeight) ) else (true()))">AerodromeSeaState: Either seaState or significantWaveHeight must be present</sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="AerodromeSeaStateType">
      <sequence>
         <element name="seaSurfaceTemperature" type="gml:MeasureType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/seaSurfaceTemperature</quantity>
               </appinfo>
               <documentation>The sea-surface temperature observed by aeronautical meteorological stations established
                  on offshore structures in support of helicopter operations.  The term sea surface
                  temperature is generally meant to be representative of the upper few meters of the
                  ocean as opposed to the skin temperature, which is the temperature of the upper few
                  centimeters.  ICAO Annex 3 / WMO No. 49-2: Section 4.8.1.5a
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/seaSurfaceTemperature
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="significantWaveHeight" type="gml:LengthType">
            <annotation>
               <documentation>The significant wave height observed</documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="seaState" type="iwxxm:SeaSurfaceStateType">
            <annotation>
               <documentation>The state of the sea observed by aeronautical meteorological stations established
                  on offshore structures in support of helicopter operations  ICAO Annex 3 / WMO No.
                  49-2: Section 4.8.1.5a  WMO 306: Table 3700
               </documentation>
            </annotation>
         </element>
      </sequence>
   </complexType>
   <complexType name="AerodromeSeaStatePropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeSeaState"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeWindShear" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeWindShearType">
      <annotation>
         <documentation>An aggregation of wind shear conditions typically reported together at an aerodrome,
            including the set of affected runways.
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeWindShear1">
               <sch:rule context="//iwxxm:AerodromeWindShear">
                  <sch:assert test="(if( @allRunways eq 'true' ) then( empty(iwxxm:runway) ) else true())">AerodromeWindShear: When all runways are affected by wind shear, no specific runways
                     should be reported
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="AerodromeWindShearType">
      <sequence>
         <element maxOccurs="unbounded" minOccurs="0" name="runway" type="saf:RunwayDirectionPropertyType">
            <annotation>
               <documentation>The specific runway(s) affected by wind shear at this aerodrome. No specific runways
                  are reported when all runways are affected by wind shear
               </documentation>
            </annotation>
         </element>
      </sequence>
      <attribute name="allRunways" type="boolean"/>
   </complexType>
   <complexType name="AerodromeWindShearPropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeWindShear"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeObservedClouds" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeObservedCloudsType">
      <annotation>
         <documentation>An aggregation of observed cloud conditions typically reported together at an aerodrome,
            including cloud types, cloud layers, and vertical visibility.
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeObservedClouds1">
               <sch:rule context="//iwxxm:AerodromeObservedClouds">
                  <sch:assert test="(if( exists(iwxxm:verticalVisibility) ) then empty(iwxxm:layer) else true())">AerodromeObservedClouds: Vertical visibility cannot be reported with cloud layers</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeObservedClouds2">
               <sch:rule context="//iwxxm:AerodromeObservedClouds">
                  <sch:assert test="(if( @amountAndHeightUnobservableByAutoSystem eq 'true' ) then ( empty(iwxxm:layer) ) else true())">AerodromeObservedClouds: When amountAndHeightUnobservableByAutoSystem is true, no
                     cloud layers may be reported
                  </sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="AerodromeObservedCloudsType">
      <sequence>
         <element maxOccurs="1" minOccurs="0" name="verticalVisibility" nillable="true" type="saf:LengthWithNilReasonType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/verticalVisibility</quantity>
               </appinfo>
               <documentation>The reported vertical visibility.  Vertical visibility is defined as the vertical
                  visual range into an obscuring medium.  Note: vertical visibility is only reported
                  in aviation-specific WMO Code-forms (FM-15 METAR, FM-16 SPECI and FM-51 TAF) thus
                  prevailing visibility is considered to be an aviation-specific quantity.  When the
                  sky is obscured and the value of the vertical visibility cannot be determined by the
                  automatic observing system due to a temporary failure of the system/sensor ("VV///")
                  the vertical visibility is missing with a nil reason of notObservable
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/verticalVisibility
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="4" minOccurs="0" name="layer" type="iwxxm:CloudLayerPropertyType"/>
      </sequence>
      <attribute name="amountAndHeightUnobservableByAutoSystem" type="boolean"/>
   </complexType>
   <complexType name="AerodromeObservedCloudsPropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeObservedClouds"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeSurfaceWind" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeSurfaceWindType">
      <annotation>
         <documentation>An aggregation of surface wind conditions typically reported together at an aerodrome,
            including wind direction information, wind speed, and wind gusts.    Wind direction
            is reported according to ICAO Annex 3 / WMO No. 49-2 Section 4.1.5.2b: "variations
            from the mean wind direction during the past 10 minutes is reported as follows, if
            the total variation is 60 or more: 1) when the total variation is 60 or more and less
            than 180 and the wind speed is 1.5 m/s (3 kt) or more, such directional variations
            are reported as the two extreme directions between which the surface wind has varied;
            2) when the total variation is 60 or more and less than 180 and the wind speed is
            less than 1.5 m/s (3 kt), the wind direction is reported as variable with no mean
            wind direction; or 3) when the total variation is 180 or more, the wind direction
            is reported as variable with no mean wind direction"
         </documentation>
         <appinfo>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeSurfaceWind1">
               <sch:rule context="//iwxxm:AerodromeSurfaceWind">
                  <sch:assert test="(if( exists(iwxxm:meanWindDirection)and exists(iwxxm:extremeClockwiseWindDirection)and exists(iwxxm:extremeCounterClockwiseWindDirection)  ) then ((iwxxm:meanWindDirection/@uom = iwxxm:extremeClockwiseWindDirection/@uom) and (iwxxm:meanWindDirection/@uom = iwxxm:extremeCounterClockwiseWindDirection/@uom)) else true())">AerodromeSurfaceWind: All wind UOMs must be the same</sch:assert>
               </sch:rule>
            </sch:pattern>
            <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron" id="AerodromeSurfaceWind2">
               <sch:rule context="//iwxxm:AerodromeSurfaceWind">
                  <sch:assert test="(if( @variableDirection eq 'true' ) then ( empty(iwxxm:meanWindDirection) ) else true())">AerodromeSurfaceWind: Wind direction is not reported when variable winds are indicated</sch:assert>
               </sch:rule>
            </sch:pattern>
         </appinfo>
      </annotation>
   </element>
   <complexType name="AerodromeSurfaceWindType">
      <sequence>
         <element maxOccurs="1" minOccurs="0" name="meanWindDirection" type="gml:AngleType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/windDirection</quantity>
               </appinfo>
               <documentation>The observed average wind direction from which the wind is blowing over the past ten
                  minutes.  Not reported when winds are variable
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/windDirection
               </documentation>
            </annotation>
         </element>
         <element name="meanWindSpeed" type="gml:SpeedType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/windSpeed</quantity>
               </appinfo>
               <documentation>The average observed wind speed over the past ten minutes  ICAO Annex 3 / WMO No.
                  49-2: Section 4.1.5.2a
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/windSpeed
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="windGust" type="gml:SpeedType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/maximumWindGustSpeed</quantity>
               </appinfo>
               <documentation>The maximum wind speed observed over the past ten minutes  ICAO Annex 3 / WMO No.
                  49-2: Section 4.1.5.2c
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/maximumWindGustSpeed
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="extremeClockwiseWindDirection" type="gml:AngleType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/windDirection</quantity>
               </appinfo>
               <documentation>The extreme clockwise direction from which the wind is blowing, inclusive.  ICAO Annex
                  3 / WMO No. 49-2: Section 4.1.5.2b
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/windDirection
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="extremeCounterClockwiseWindDirection" type="gml:AngleType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/windDirection</quantity>
               </appinfo>
               <documentation>The extreme counter-clockwise direction from which the wind is blowing, inclusive.
                  ICAO Annex 3 / WMO No. 49-2: Section 4.1.5.2b
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/windDirection
               </documentation>
            </annotation>
         </element>
      </sequence>
      <attribute name="variableDirection" type="boolean"/>
   </complexType>
   <complexType name="AerodromeSurfaceWindPropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeSurfaceWind"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <element name="AerodromeHorizontalVisibility" substitutionGroup="gml:AbstractObject" type="iwxxm:AerodromeHorizontalVisibilityType">
      <annotation>
         <documentation>An aggregation of horizontal visibility conditions typically reported together at
            an aerodrome, including the prevailing visibility and minimum visibility.
         </documentation>
      </annotation>
   </element>
   <complexType name="AerodromeHorizontalVisibilityType">
      <sequence>
         <element name="prevailingVisibility" type="gml:LengthType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/aeronauticalPrevailingHorizontalVisibility</quantity>
               </appinfo>
               <documentation>The reported prevailing horizontal visibility at the surface that is representative
                  of the aerodrome.  The greatest visibility value, observed in accordance with the
                  definition of "visibility", which is reached within at least half the horizon circle
                  or within at least half of the surface of the aerodrome. These areas could comprise
                  contiguous or non-contiguous sectors.  Note: This value may be assessed by human observation
                  and/or instrumented systems. When instruments are installed, they are used to obtain
                  the best estimate of the prevailing visibility.  To report a prevailing visibility
                  of at least 10000 meters, prevailing visibility is reported as 10000 meters and the
                  prevailing visibility operator is reported as "above".  ICAO Annex 3 / WMO No. 49-2:
                  Section 4.2.4.4b
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/aeronauticalPrevailingHorizontalVisibility
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="prevailingVisibilityOperator" type="iwxxm:RelationalOperatorType">
            <annotation>
               <documentation>The reported relational operator for the prevailing horizontal visibility.  When reported,
                  this operator is reported in conjunction with prevailing visibility.  To report a
                  prevailing visibility of at least 10000 meters, prevailing visibility is reported
                  as 10000 meters and the operator is reported as "above".    When no operator is reported,
                  prevailing visibility represents an exact value with identical semantics to other
                  measured quantities
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="minimumVisibility" type="gml:LengthType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/aeronauticalVisibility</quantity>
               </appinfo>
               <documentation>The minimum observed visibility.  ICAO Annex 3 / WMO No. 49-2 Section 4.2.4.4a: "When
                  the visibility is not the same in different directions and a) when the lowest visibility
                  is different from the prevailing visibility, and    1) less than 1 500 m or    2)
                  less than 50 percent of the prevailing visibility and less than 5000 m; the lowest
                  visibility observed should also be reported and,when possible, its general direction
                  in relation to the aerodrome reference point indicated by reference to one of the
                  eight points of the compass. If the lowest visibility is observed in more than one
                  direction, then the most operationally significant direction should be reported; and
                  b) when the visibility is fluctuating rapidly, and the prevailing visibility cannot
                  be determined, only the lowest visibility should be reported, with no indication of
                  direction."
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/aeronauticalVisibility
               </documentation>
            </annotation>
         </element>
         <element maxOccurs="1" minOccurs="0" name="minimumVisibilityDirection" type="gml:AngleType">
            <annotation>
               <appinfo>
                  <quantity>http://codes.wmo.int/common/quantity-kind/aerodromeMinimumVisibilityDirection</quantity>
               </appinfo>
               <documentation>The direction of the minimum visibility relative to the reporting station.  This is
                  optional in cases where minimum visibility is reported but the visibility is fluctuating
                  rapidly.  Minimum visibility is reported in cardinal and inter-cardinal directions
                  (N, NE, E, SE, S, SW, W, and NW)
                  
                  quantity: http://codes.wmo.int/common/quantity-kind/aerodromeMinimumVisibilityDirection
               </documentation>
            </annotation>
         </element>
      </sequence>
   </complexType>
   <complexType name="AerodromeHorizontalVisibilityPropertyType">
      <sequence>
         <element ref="iwxxm:AerodromeHorizontalVisibility"/>
      </sequence>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <simpleType name="ForecastChangeIndicatorType">
      <annotation>
         <documentation>Change qualifier of a trend-type forecast or an aerodrome forecast.  Defined in WMO
            No. 306 Vol I.1; FM-15 METAR, FM-16 SPECI and FM-51 TAF. Also see WMO No. 306 Vol
            I.2 Part B FM 94 BUFR code-table 0 08 016 'Change qualifier of a trend forecast or
            an aerodrome forecast'.
         </documentation>
      </annotation>
      <restriction base="string">
         <enumeration value="NO_SIGNIFICANT_CHANGES">
            <annotation>
               <documentation>No significant changes are forecast (NOSIG)</documentation>
            </annotation>
         </enumeration>
         <enumeration value="BECOMING">
            <annotation>
               <documentation>When the change is forecast to commence at the beginning of the forecast period and
                  be completed by the end of that period, or when the change is forecast to occur within
                  the forecast period but the time of the change is uncertain (possibly shortly after
                  the beginning of the forecast period, or midway or near the end of that period), the
                  change is indicated by only the change indicator BECMG.
               </documentation>
            </annotation>
         </enumeration>
         <enumeration value="TEMPORARY_FLUCTUATIONS">
            <annotation>
               <documentation>The change indicator TEMPO is used to describe expected temporary fluctuations to
                  meteorological conditions which reach or pass specified threshold criteria and last
                  for a period of less than one hour in each instance and in the aggregate cover less
                  than half of the forecast period during which the fluctuations are expected to occur.
               </documentation>
            </annotation>
         </enumeration>
      </restriction>
   </simpleType>
   <simpleType name="VisualRangeTendencyType">
      <annotation>
         <documentation>The tendency of visual range (e.g., upward, downward).  Defined for the purposes of
            aviation meteorology reporting of the visual range on runways (WMO No. 49-2).  If
            the [runway] visual range (RVR) values during the 10-minute period preceding the nominal
            observation time show a distinct upward or downward tendency such that the mean during
            the first five minutes varies by 100 metres or more from the mean in the second five
            minutes of the period, an UPWARD [U] or DOWNWARD [D] tendency is recorded. When no
            distinct change in RVR is observed, NO CHANGE [N] is recorded.  See WMO No. 306 Vol
            I.2 FM 94 BUFR code-table 0 20 018 "Tendency of runway visual range".
         </documentation>
      </annotation>
      <restriction base="string">
         <enumeration value="UPWARD">
            <annotation>
               <documentation>Upward (increasing) tendency</documentation>
            </annotation>
         </enumeration>
         <enumeration value="NO_CHANGE">
            <annotation>
               <documentation>No change</documentation>
            </annotation>
         </enumeration>
         <enumeration value="DOWNWARD">
            <annotation>
               <documentation>Downward (decreasing) tendency</documentation>
            </annotation>
         </enumeration>
      </restriction>
   </simpleType>
   <simpleType name="MeteorologicalAerodromeReportStatusType">
      <annotation>
         <documentation>The status of a MeteorologicalAerodromeObservationReport (e.g., a normal issuance,
            correction of an earlier report, etc.)
         </documentation>
      </annotation>
      <restriction base="string">
         <enumeration value="NORMAL">
            <annotation>
               <documentation>Normal report status: not a correction of an earlier report</documentation>
            </annotation>
         </enumeration>
         <enumeration value="CORRECTION">
            <annotation>
               <documentation>A correction of an earlier report</documentation>
            </annotation>
         </enumeration>
         <enumeration value="MISSING">
            <annotation>
               <documentation>The report is missing ("NIL" from ICAO Annex 3 / WMO No. 49)</documentation>
            </annotation>
         </enumeration>
      </restriction>
   </simpleType>
   <complexType name="AerodromeRecentWeatherType">
      <annotation>
         <appinfo>
            <vocabulary>http://codes.wmo.int/49-2/AerodromeRecentWeather</vocabulary>
            <extensibility>none</extensibility>
         </appinfo>
         <documentation>Weather phenomenon of operational significance to aviation observed during the period
            since the last routine report, or last hour, whichever is shorter, but not at the
            time of observation.  Only a specific set of weather phenomenon are reported within
            aviation meteorology as defined in Regulation ICAO Annex 3 / WMO No. 49-2.  This CodeList
            is specifically defined for aviation purposes as defined in WMO No. 49-2. A superset
            of definitions are defined in WMO No. 306 Vol I.1 code-table 4678 "Significant weather
            phenomena".
            
            vocabulary: http://codes.wmo.int/49-2/AerodromeRecentWeather
            extensibility: none
         </documentation>
      </annotation>
      <complexContent>
         <extension base="gml:ReferenceType"/>
      </complexContent>
   </complexType>
   <complexType name="SeaSurfaceStateType">
      <annotation>
         <appinfo>
            <vocabulary>http://codes.wmo.int/bufr4/codeflag/0-22-061</vocabulary>
            <extensibility>none</extensibility>
         </appinfo>
         <documentation>Categorical assessment of sea surface state (or other large open body of water) based
            on height of waves.  Height in metres : Category - 0 metres : Calm (glassy) - 0-0.1
            metres : Calm (rippled) - 0.1-0.5 metres : Smooth - 0.5-1.25 metres : Slight - 1.25-2.5
            metres : Moderate - 2.5-4 metres : Rough - 4-6 metres : Very rough - 6-9 metres :
            High - 9-14 metres : Very high - &amp;gt;14 metres : Phenomenal  See WMO No. 306 Vol I.1
            code table 3700 "State of the sea" and WMO No. 306 Vol I.2 FM 94 BUFR code table 0
            22 061 "State of the sea".
            
            vocabulary: http://codes.wmo.int/bufr4/codeflag/0-22-061
            extensibility: none
         </documentation>
      </annotation>
      <complexContent>
         <extension base="gml:ReferenceType"/>
      </complexContent>
   </complexType>
   <complexType name="RunwayDepositsType">
      <annotation>
         <appinfo>
            <vocabulary>http://codes.wmo.int/bufr4/codeflag/0-20-086</vocabulary>
            <extensibility>none</extensibility>
         </appinfo>
         <documentation>Type of deposit on a runway.  See WMO No. 306 Vol I.1 code table 0919 and WMO No.
            306 Vol I.2 FM 94 BUFR code table 0 20 086 "Runway deposits".
            
            vocabulary: http://codes.wmo.int/bufr4/codeflag/0-20-086
            extensibility: none
         </documentation>
      </annotation>
      <complexContent>
         <extension base="gml:ReferenceType"/>
      </complexContent>
   </complexType>
   <complexType name="RunwayContaminationType">
      <annotation>
         <appinfo>
            <vocabulary>http://codes.wmo.int/bufr4/codeflag/0-20-087</vocabulary>
            <extensibility>none</extensibility>
         </appinfo>
         <documentation>Extent of runway surface that is contaminated (covered)
            vocabulary: http://codes.wmo.int/bufr4/codeflag/0-20-087
            extensibility: none
         </documentation>
      </annotation>
      <complexContent>
         <extension base="gml:ReferenceType"/>
      </complexContent>
   </complexType>
   <complexType name="AerodromePresentWeatherType">
      <annotation>
         <appinfo>
            <vocabulary>http://codes.wmo.int/49-2/AerodromePresentWeather</vocabulary>
            <extensibility>none</extensibility>
         </appinfo>
         <documentation>The present weather observed at, or in near vicinity of, an aerodrome.  Only a specific
            set of weather phenomenon are reported within aviation meteorology as defined in Regulation
            ICAO Annex 3 / WMO No. 49-2.  This CodeList is specifically defined for aviation purposes
            as defined in WMO No. 49-2. A superset of definitions are defined in WMO No. 306 Vol
            I.1 code-table 4678 "Significant weather phenomena".
            
            vocabulary: http://codes.wmo.int/49-2/AerodromePresentWeather
            extensibility: none
         </documentation>
      </annotation>
      <complexContent>
         <extension base="gml:ReferenceType"/>
      </complexContent>
   </complexType>
</schema>
